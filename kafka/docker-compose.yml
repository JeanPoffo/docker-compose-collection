version: "3.9"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.6
    environment:
      - "ZOOKEEPER_CLIENT_PORT=2181"
    networks:
      - local
  
  kafka:
    image: confluentinc/cp-kafka:7.2.6
    ports:
      - "9092:9092"
    environment:
      - "KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181"
      - "KAFKA_BROKER_ID=1"
      - "KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
      - "KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT"
      - "KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092"
      - "KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1"
      - "KAFKA_MIN_INSYNC_REPLICAS=1"
    networks:
      - local
    depends_on:
      - zookeeper
  
  init-kafka:
    image: confluentinc/cp-kafka:7.2.6
    entrypoint: [ "/bin/sh", "-c" ]
    command:
      - "kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic reg-products --replication-factor 1 --partitions 1"
    networks:
      - local
    depends_on:
      - kafka
  
  kafka-ui:
    image: provectuslabs/kafka-ui:150fc21fb84770520e669f8681b5c9a2bf3ba344
    ports:
      - "8080:8080"
    environment:
      - "KAFKA_CLUSTERS_0_NAME=LOCAL"
      - "KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:29092"
      - "KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181"
    networks:
      - local
    restart: always
    depends_on:
      init-kafka:
        condition: service_completed_successfully

networks:
  local:
    driver: bridge